 that homosexual partners should n't expect shared healthcare in the same way that an unmarried couple should n't .


root(ROOT-0, expect-6)
mark(expect-6, that-1)
amod(partners-3, homosexual-2)
nsubj(expect-6, partners-3)
aux(expect-6, should-4)
neg(expect-6, n't-5)
amod(healthcare-8, shared-7)
dobj(expect-6, healthcare-8)
det(way-12, the-10)
amod(way-12, same-11)
prep_in(expect-6, way-12)
mark(should-17, that-13)
det(couple-16, an-14)
amod(couple-16, unmarried-15)
nsubj(should-17, couple-16)
ccomp(expect-6, should-17)
neg(should-17, n't-18)

He compares homosexual partners to roommates and and demonstrates that you can not make marriage mean whatever you want by explaining that he is not legally allowed to marry his dog.
root(ROOT-0, compares-2)
nsubj(compares-2, He-1)
nsubj(demonstrates-9, He-1)
amod(partners-4, homosexual-3)
dobj(compares-2, partners-4)
prep_to(compares-2, roommates-6)
advmod(demonstrates-9, and-8)
conj_and(compares-2, demonstrates-9)
mark(make-14, that-10)
nsubj(make-14, you-11)
aux(make-14, can-12)
neg(make-14, not-13)
ccomp(demonstrates-9, make-14)
nsubj(mean-16, marriage-15)
ccomp(make-14, mean-16)
dobj(want-19, whatever-17)
nsubj(want-19, you-18)
ccomp(mean-16, want-19)
prepc_by(want-19, explaining-21)
mark(allowed-27, that-22)
nsubjpass(allowed-27, he-23)
auxpass(allowed-27, is-24)
neg(allowed-27, not-25)
advmod(allowed-27, legally-26)
ccomp(explaining-21, allowed-27)
aux(marry-29, to-28)
xcomp(allowed-27, marry-29)
poss(dog-31, his-30)
dobj(marry-29, dog-31)

He compares homosexual partners to roommates and and demonstrates that you can not make marriage mean whatever you want by explaining that he is not legally allowed to marry his dog.
root(ROOT-0, compares-2)
nsubj(compares-2, He-1)
nsubj(demonstrates-9, He-1)
amod(partners-4, homosexual-3)
dobj(compares-2, partners-4)
prep_to(compares-2, roommates-6)
advmod(demonstrates-9, and-8)
conj_and(compares-2, demonstrates-9)
mark(make-14, that-10)
nsubj(make-14, you-11)
aux(make-14, can-12)
neg(make-14, not-13)
ccomp(demonstrates-9, make-14)
nsubj(mean-16, marriage-15)
ccomp(make-14, mean-16)
dobj(want-19, whatever-17)
nsubj(want-19, you-18)
ccomp(mean-16, want-19)
prepc_by(want-19, explaining-21)
mark(allowed-27, that-22)
nsubjpass(allowed-27, he-23)
auxpass(allowed-27, is-24)
neg(allowed-27, not-25)
advmod(allowed-27, legally-26)
ccomp(explaining-21, allowed-27)
aux(marry-29, to-28)
xcomp(allowed-27, marry-29)
poss(dog-31, his-30)
dobj(marry-29, dog-31)

