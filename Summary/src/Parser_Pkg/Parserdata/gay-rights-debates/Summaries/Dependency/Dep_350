S2 states that a straight man can marry his girlfriend and she can get healthcare, but gay people are prohibited from getting married.
root(ROOT-0, married-24)
nn(states-2, S2-1)
nsubj(married-24, states-2)
mark(marry-8, that-3)
det(man-6, a-4)
amod(man-6, straight-5)
nsubj(marry-8, man-6)
aux(marry-8, can-7)
dep(states-2, marry-8)
poss(girlfriend-10, his-9)
dobj(marry-8, girlfriend-10)
cc(marry-8, and-11)
nsubj(get-14, she-12)
aux(get-14, can-13)
conj(marry-8, get-14)
dobj(get-14, healthcare-15)
cc(get-14, but-17)
amod(people-19, gay-18)
nsubjpass(prohibited-21, people-19)
auxpass(prohibited-21, are-20)
conj(get-14, prohibited-21)
prep(prohibited-21, from-22)
pcomp(from-22, getting-23)

S2 states that a straight man can marry his girlfriend and she can get healthcare, but gay people are prohibited from getting married.
root(ROOT-0, married-24)
nn(states-2, S2-1)
nsubj(married-24, states-2)
mark(marry-8, that-3)
det(man-6, a-4)
amod(man-6, straight-5)
nsubj(marry-8, man-6)
aux(marry-8, can-7)
dep(states-2, marry-8)
poss(girlfriend-10, his-9)
dobj(marry-8, girlfriend-10)
cc(marry-8, and-11)
nsubj(get-14, she-12)
aux(get-14, can-13)
conj(marry-8, get-14)
dobj(get-14, healthcare-15)
cc(get-14, but-17)
amod(people-19, gay-18)
nsubjpass(prohibited-21, people-19)
auxpass(prohibited-21, are-20)
conj(get-14, prohibited-21)
prep(prohibited-21, from-22)
pcomp(from-22, getting-23)

S1 retorts by stating that he does not feel the need to impose his morality on anyone ; he is willing to let society determine its own limits.
root(ROOT-0, retorts-2)
nn(retorts-2, S1-1)
prep(retorts-2, by-3)
pcomp(by-3, stating-4)
mark(feel-9, that-5)
nsubj(feel-9, he-6)
aux(feel-9, does-7)
neg(feel-9, not-8)
ccomp(stating-4, feel-9)
det(need-11, the-10)
dobj(feel-9, need-11)
aux(impose-13, to-12)
vmod(need-11, impose-13)
poss(morality-15, his-14)
dobj(impose-13, morality-15)
prep(impose-13, on-16)
pobj(on-16, anyone-17)
nsubj(willing-21, he-19)
cop(willing-21, is-20)
dep(retorts-2, willing-21)
aux(let-23, to-22)
xcomp(willing-21, let-23)
nsubj(determine-25, society-24)
ccomp(let-23, determine-25)
poss(limits-28, its-26)
amod(limits-28, own-27)
dobj(determine-25, limits-28)

